<UserControl x:Class="VASFx.UI.InterfaceView.PLCInterfaceVTypeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VASFx.UI.InterfaceView"
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             Background="{DynamicResource MaterialDesignPaper}" 
             FontFamily="{DynamicResource MaterialDesignFont}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             >
            
    <UserControl.Resources>
        <Style x:Key="tbtn_IOMonitoring" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Back" BorderBrush="#FF208DC9" CornerRadius="2" BorderThickness="1" Background="White"/>
                            <Border x:Name="border" BorderBrush="#FF208DC9" CornerRadius="2" BorderThickness="1" Background="Green" Visibility="Collapsed"/>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Center" FontWeight="Normal" Text="{Binding Addr}" Margin="0,0,0,2"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="border" Value="Visible"/>
                                <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource BasicWhite_Button}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="listBoxItemTemplate" >
            <Grid Height="15">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"  SharedSizeGroup="Addr" />
                    <ColumnDefinition Width="auto"  SharedSizeGroup="Name" />
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ToggleButton Content="ToggleButton" Style="{DynamicResource tbtn_IOMonitoring}" IsChecked="{Binding IsOn, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" IsHitTestVisible="False" Height="Auto" Width="60" Margin="0,1" />
                <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,0" Text="{Binding Tag}" HorizontalAlignment="Left" VerticalAlignment="Center" Padding="0,0,0,2" FontWeight="Normal"/>
                <ContentControl Grid.Row="0" Grid.Column="2" Content="{Binding Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" VerticalAlignment="Center" Margin="5,0" HorizontalAlignment="Center" />
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <materialDesign:DialogHost Identifier="PLCInterfaceRootDialog" >
        <materialDesign:Card >
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBox Text="PC Side" FontWeight="Bold" Margin="10,10,10,5" IsReadOnly="False"/>
                    <ListBox x:Name="pcSidelistBox" Grid.Row="1" ItemsSource="{Binding ToDataList}" ItemTemplate="{StaticResource listBoxItemTemplate}" TextElement.FontWeight="Bold" HorizontalContentAlignment="Left"
                         VerticalContentAlignment="Center" Grid.IsSharedSizeScope="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseRightButtonUp">
                                <i:InvokeCommandAction Command="{Binding ChangeBlockStateCommand }" 
                                                       CommandParameter="{Binding ElementName=pcSidelistBox, Path=SelectedItem}"/>
                            </i:EventTrigger>
                            <!--<i:EventTrigger EventName="SelectionChanged"/>-->
                        </i:Interaction.Triggers>
                    </ListBox>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <TextBox Text="PLC Side" FontWeight="Bold" Margin="10,10,10,5" IsReadOnly="False"/>
                    <ListBox Grid.Row="1" ItemsSource="{Binding FromDataList}" ItemTemplate="{StaticResource listBoxItemTemplate}" TextElement.FontWeight="Bold" HorizontalContentAlignment="Left"
                         VerticalContentAlignment="Center" Grid.IsSharedSizeScope="True" />
                </Grid>
            </Grid>
        </materialDesign:Card>
    </materialDesign:DialogHost>
</UserControl>
